{
  start = `grammar`

  syntax = ` 
    grammar  = value end                  -> _1

    value    = 'null'                     -> 'None'
             | 'true'                     -> 'True'
             | 'false'                    -> 'False'
             | object                     -> ['object', _1]
             | array                      -> ['array', _1]
             | string                     -> ['string', _1]
             | number                     -> ['number', _1]

    object   = '{' members? '}'           -> _2 

    members  = member (',' members)*      -> [_1] + _2

    member   = string ':' value           -> [_1, _3]

    array    = '[' values? ']'            -> _2 

    values = value (',' value)*           -> [_1] + _2
  `

  tokens = `
    string       = '"' {(~'"' qchar)*} '"' -> _2

    qchar        = '\"' | anything

    number       = {'-'? int ('.' digit*)? exp? }

    int          = '0' | {'1'..'9' digit*}

    digit        = '0'..'9'

    exp          = {('e'|'E') ('+'|'-')? digit+}
  `

  whitespace = `' ' | '\t' | '\r' | '\n')*`
}
